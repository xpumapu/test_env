#!/usr/bin/tclsh

package require Tclx

set log_file "/tmp/deam.log"

proc get_time {} {
	return [clock format [clock seconds]]
}

proc shutdown {} {
	;#whatever cleanup you need to do
	set fd [open shut.log a+]
	fconfigure $fd -buffering none
	puts $fd "[get_time]: Main process shutdown"
	close $fd
	exit
}

proc server {chan addr port} {
	fconfigure $chan -buffering line ;# NOT -blocking 0 (see below!)
	puts $chan "test server tcl"
	flush $chan
	close $chan
}

proc dispatcher {fd} {
	puts $fd "[get_time]: dispatcher pid [pid]"
	set ns [socket -server server 7707]
	puts $fd "[get_time]: dispatcher ns $ns"
	while {1} {
		;#set stat [gets $ns line]
		;#puts $fd "[get_time]: dispacher while, stat $stat line: $line"
		puts $fd "[get_time]: dispacher while"
		vwait forever
	}
}

proc mysigterm {} {
	set fd [open term.log a+]
	fconfigure $fd -buffering none
	puts $fd "[get_time]: sigterm"
	close $fd
}

proc daemonize {fd} {
	close stdin
	close stdout
	close stderr
	set pro [fork]
	puts $fd "[get_time]: fork $pro"
	if {$pro} {
		exit 0
	}
	puts $fd "[get_time]: id [id process group] pid [pid]"
	id process group set

	set pro [fork]
	puts $fd "[get_time]: fork2 $pro"
	if {$pro} {
		exit -1
	}
	set sd [open /dev/null r]
	set sd [open /dev/null w]
	set sd [open /dev/null w]
	cd /
	umask 022
	return [id process]
}

file delete $log_file
set fd [open $log_file a+]
fconfigure $fd -buffering none
puts $fd "[get_time]: startup [pid]"

set deam_id [daemonize $fd]
puts $fd "[get_time]: deam_id $deam_id"

signal ignore  SIGHUP
signal unblock {QUIT TERM}
signal trap    QUIT shutdown
signal trap TERM mysigterm
puts $fd "[get_time]: dispatcher start"
dispatcher $fd

